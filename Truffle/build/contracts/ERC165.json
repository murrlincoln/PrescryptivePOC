{
  "contractName": "ERC165",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/murrl/GithubRepos/PrescryptivePOC/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/murrl/GithubRepos/PrescryptivePOC/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x01131a4507d87aa27f9d6a30a97782e05b5d9ff0cb843de7475fbfe1fe007350\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://350d304468fffef12668366dcd1c1b7f4a5acb94f6ca77204b08dcb6b2be0ae7\",\"dweb:/ipfs/QmVCUndTeKS1iWiBa6w43pKu1v27txzc7yVL2rcV3MA6Wv\"]},\"/C/Users/murrl/GithubRepos/PrescryptivePOC/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x07755f0e83525aef84dfbcb2aa2835e7c2053ae05ed2d53317b3909a1c83ab70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ecb29ea4d114c80dffca5523dc1e4d2055eb5ab78f74eb667642afe68c36541\",\"dweb:/ipfs/QmVscnr5ka8WPK4qTfHXQ1865Fyvpxz7qLovywa9rnzfuU\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.4.22 <0.9.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n",
  "sourcePath": "C:\\Users\\murrl\\GithubRepos\\PrescryptivePOC\\node_modules\\@openzeppelin\\contracts\\utils\\introspection\\ERC165.sol",
  "ast": {
    "absolutePath": "/C/Users/murrl/GithubRepos/PrescryptivePOC/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
    "exportedSymbols": {
      "ERC165": [
        8758
      ]
    },
    "id": 8759,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8736,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:31"
      },
      {
        "absolutePath": "/C/Users/murrl/GithubRepos/PrescryptivePOC/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "file": "./IERC165.sol",
        "id": 8737,
        "nodeType": "ImportDirective",
        "scope": 8759,
        "sourceUnit": 8771,
        "src": "67:23:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8739,
              "name": "IERC165",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8770,
              "src": "697:7:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC165_$8770",
                "typeString": "contract IERC165"
              }
            },
            "id": 8740,
            "nodeType": "InheritanceSpecifier",
            "src": "697:7:31"
          }
        ],
        "contractDependencies": [
          8770
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 8738,
          "nodeType": "StructuredDocumentation",
          "src": "92:576:31",
          "text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
        },
        "fullyImplemented": true,
        "id": 8758,
        "linearizedBaseContracts": [
          8758,
          8770
        ],
        "name": "ERC165",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              8769
            ],
            "body": {
              "id": 8756,
              "nodeType": "Block",
              "src": "863:64:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    },
                    "id": 8754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 8749,
                      "name": "interfaceId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8743,
                      "src": "880:11:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8751,
                            "name": "IERC165",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8770,
                            "src": "900:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC165_$8770_$",
                              "typeString": "type(contract IERC165)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_contract$_IERC165_$8770_$",
                              "typeString": "type(contract IERC165)"
                            }
                          ],
                          "id": 8750,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -27,
                          "src": "895:4:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 8752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "895:13:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$8770",
                          "typeString": "type(contract IERC165)"
                        }
                      },
                      "id": 8753,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "interfaceId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "895:25:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "880:40:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 8748,
                  "id": 8755,
                  "nodeType": "Return",
                  "src": "873:47:31"
                }
              ]
            },
            "documentation": {
              "id": 8741,
              "nodeType": "StructuredDocumentation",
              "src": "711:56:31",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 8757,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8745,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "839:8:31"
            },
            "parameters": {
              "id": 8744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8743,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8757,
                  "src": "799:18:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 8742,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "799:6:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "798:20:31"
            },
            "returnParameters": {
              "id": 8748,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8747,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 8757,
                  "src": "857:4:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8746,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "857:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "856:6:31"
            },
            "scope": 8758,
            "src": "772:155:31",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 8759,
        "src": "669:260:31"
      }
    ],
    "src": "33:897:31"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/C/Users/murrl/GithubRepos/PrescryptivePOC/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol",
      "exportedSymbols": {
        "ERC165": [
          8758
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".22",
            "<",
            "0.9",
            ".0"
          ]
        },
        "id": 8736,
        "name": "PragmaDirective",
        "src": "33:32:31"
      },
      {
        "attributes": {
          "SourceUnit": 8771,
          "absolutePath": "/C/Users/murrl/GithubRepos/PrescryptivePOC/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
          "file": "./IERC165.sol",
          "scope": 8759,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 8737,
        "name": "ImportDirective",
        "src": "67:23:31"
      },
      {
        "attributes": {
          "abstract": true,
          "contractDependencies": [
            8770
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            8758,
            8770
          ],
          "name": "ERC165",
          "scope": 8759
        },
        "children": [
          {
            "attributes": {
              "text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
            },
            "id": 8738,
            "name": "StructuredDocumentation",
            "src": "92:576:31"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "IERC165",
                  "referencedDeclaration": 8770,
                  "type": "contract IERC165"
                },
                "id": 8739,
                "name": "UserDefinedTypeName",
                "src": "697:7:31"
              }
            ],
            "id": 8740,
            "name": "InheritanceSpecifier",
            "src": "697:7:31"
          },
          {
            "attributes": {
              "baseFunctions": [
                8769
              ],
              "functionSelector": "01ffc9a7",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "supportsInterface",
              "scope": 8758,
              "stateMutability": "view",
              "virtual": true,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev See {IERC165-supportsInterface}."
                },
                "id": 8741,
                "name": "StructuredDocumentation",
                "src": "711:56:31"
              },
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 8745,
                "name": "OverrideSpecifier",
                "src": "839:8:31"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "interfaceId",
                      "overrides": null,
                      "scope": 8757,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes4",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes4",
                          "type": "bytes4"
                        },
                        "id": 8742,
                        "name": "ElementaryTypeName",
                        "src": "799:6:31"
                      }
                    ],
                    "id": 8743,
                    "name": "VariableDeclaration",
                    "src": "799:18:31"
                  }
                ],
                "id": 8744,
                "name": "ParameterList",
                "src": "798:20:31"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "overrides": null,
                      "scope": 8757,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 8746,
                        "name": "ElementaryTypeName",
                        "src": "857:4:31"
                      }
                    ],
                    "id": 8747,
                    "name": "VariableDeclaration",
                    "src": "857:4:31"
                  }
                ],
                "id": 8748,
                "name": "ParameterList",
                "src": "856:6:31"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 8748
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "==",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 8743,
                              "type": "bytes4",
                              "value": "interfaceId"
                            },
                            "id": 8749,
                            "name": "Identifier",
                            "src": "880:11:31"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "member_name": "interfaceId",
                              "referencedDeclaration": null,
                              "type": "bytes4"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "type(contract IERC165)",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_type$_t_contract$_IERC165_$8770_$",
                                          "typeString": "type(contract IERC165)"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -27,
                                      "type": "function () pure",
                                      "value": "type"
                                    },
                                    "id": 8750,
                                    "name": "Identifier",
                                    "src": "895:4:31"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 8770,
                                      "type": "type(contract IERC165)",
                                      "value": "IERC165"
                                    },
                                    "id": 8751,
                                    "name": "Identifier",
                                    "src": "900:7:31"
                                  }
                                ],
                                "id": 8752,
                                "name": "FunctionCall",
                                "src": "895:13:31"
                              }
                            ],
                            "id": 8753,
                            "name": "MemberAccess",
                            "src": "895:25:31"
                          }
                        ],
                        "id": 8754,
                        "name": "BinaryOperation",
                        "src": "880:40:31"
                      }
                    ],
                    "id": 8755,
                    "name": "Return",
                    "src": "873:47:31"
                  }
                ],
                "id": 8756,
                "name": "Block",
                "src": "863:64:31"
              }
            ],
            "id": 8757,
            "name": "FunctionDefinition",
            "src": "772:155:31"
          }
        ],
        "id": 8758,
        "name": "ContractDefinition",
        "src": "669:260:31"
      }
    ],
    "id": 8759,
    "name": "SourceUnit",
    "src": "33:897:31"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-08-13T15:35:51.135Z",
  "devdoc": {
    "details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
    "kind": "dev",
    "methods": {
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}