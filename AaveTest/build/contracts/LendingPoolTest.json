{
  "contractName": "LendingPoolTest",
  "abi": [
    {
      "inputs": [],
      "name": "pool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "depositFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"depositFunds(uint256)\":{\"details\":\"- When funds are deposited through this function in the smart contract,  they will be sent to Aave and turn into yield-bearing Note: Function will fail if approval (stablecoin.approve(pool, 79228162514260000000000000000)) not given first.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/murrl/GithubRepos/PrescryptivePOC/AaveTest/contracts/LendingPoolTest.sol\":\"LendingPoolTest\"},\"evmVersion\":\"constantinople\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/murrl/GithubRepos/PrescryptivePOC/AaveTest/contracts/LendingPoolTest.sol\":{\"keccak256\":\"0x70ef3b98bbc294ed16363dc2f2c229425253e21c6d3c504d35d792b2fa77c0ab\",\"urls\":[\"bzz-raw://ebeb296d2537ba2d83489c98ee4c3473f62be012db88198876e0365eec27a8ca\",\"dweb:/ipfs/Qmf1oeQvbrBy3YrYGgc6oCjHu9fzFQCKerEG4f6sqVy4Wo\"]},\"@aave/protocol-v2/contracts/dependencies/openzeppelin/contracts/Address.sol\":{\"keccak256\":\"0xb7f2cd193efe93976d7b473fc4fa27dda83bd4db5b81889cbcd4701f3b7023ae\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://2275632637acd2f30d576612dcddc1c6ba78d81af4d044fafe870e6a809a8b6e\",\"dweb:/ipfs/QmW3uMzrLbjzP45zVpP8e9V6o8WFSceHiHq8WDMJ8YjCeL\"]},\"@aave/protocol-v2/contracts/dependencies/openzeppelin/contracts/IERC20.sol\":{\"keccak256\":\"0x6406b04abfeda2c8c80ea3faf797ce4501e66db41fb6ff4e299ebe0402879f44\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://33b0db81db37bd6fe20aa0b23581c6b0edef2f3c49d0bd88b4fe46c1164adb00\",\"dweb:/ipfs/QmYn1zYwt3ahpkLYwHh6h5b1UJrzP2xy5G3at9oEVNw2c1\"]},\"@aave/protocol-v2/contracts/dependencies/openzeppelin/contracts/SafeERC20.sol\":{\"keccak256\":\"0xd664a81c469ebd6c7b09ca8be499e6af30100e3e42be6bfea9f4a90c02a7cb1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9f8ac1ffeaaefc7685abd544813e31ebb46e81b393291d68b1a99a9c7550df2\",\"dweb:/ipfs/QmP3xWkMNgDBbDn9HF6vVKpHTP5rW4j7dxWmhKsxicQ7Mg\"]},\"@aave/protocol-v2/contracts/dependencies/openzeppelin/contracts/SafeMath.sol\":{\"keccak256\":\"0xfca35d11bafb85cf4f2203b41f1a98238dca59b6a9faa28b86ea3f9f63da8ec5\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://7019345b024afa93000c6b5a2b095be59c3c5352eb658619c941d23d0af5bc65\",\"dweb:/ipfs/QmZLxJKSbM66Wd1Qd43jSdiXdg7JP6DQ9J6LuANUZummM4\"]},\"@aave/protocol-v2/contracts/flashloan/interfaces/IFlashLoanReceiver.sol\":{\"keccak256\":\"0x5d3699fb09fdcfd69dfb67538dc3a0711711ad0d1ff54723cb371a3359d64107\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://f86660197ef51242bf7d475376dab88b20b27d54eb59ba818881e208ccd8a8ac\",\"dweb:/ipfs/QmPpMtC1umHtnaq6dFwCgQkxdzWveXuGzN6ECVBHZ7obuy\"]},\"@aave/protocol-v2/contracts/interfaces/IAToken.sol\":{\"keccak256\":\"0x75298f98d270973cc1a469a0d72a184c0d9bbc0ae279a05ebcfa248138576681\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://2c92a428d2b9ac20aaadffc0300fd1448635d1a8d57a04f38a41ea116a51d162\",\"dweb:/ipfs/QmPd9qvveX85kcqGcyuZQzz39Y6uPvYohyFaBWJhTpUPk1\"]},\"@aave/protocol-v2/contracts/interfaces/ILendingPool.sol\":{\"keccak256\":\"0x5fa85a3137312e0d37602723af7408ed97636028699bdf7a7c7cc2dc34cdbafc\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://2f084d52067cbb14f10a00813b17c386681e17e295f878d3d8992cef63e67ac1\",\"dweb:/ipfs/QmWGjEYp4ZHmMxW7zkV8ctsmpc5kAYDw3yqaf1LZGsFFuJ\"]},\"@aave/protocol-v2/contracts/interfaces/ILendingPoolAddressesProvider.sol\":{\"keccak256\":\"0xcb0e2c4c19c0bde86907b6ab45b6a1db4932d3642fc51410d56c9411a65b9f1d\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://38d01c9e664c64d46a15bbbda2933b5fb877d33f6746d2db32563962beea9119\",\"dweb:/ipfs/QmajEmcQZz3E6GzmLpeGvnEswuwCjVYy8svqdx8bxi4PuG\"]},\"@aave/protocol-v2/contracts/interfaces/IPriceOracleGetter.sol\":{\"keccak256\":\"0xf81a1742c6cac8d98baeb7d6003cedc97eed9c362bc0156aa00033d04e673f3e\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://74eeb88f24e2375b5106b0e54987b564f2f9b7c753e8675997e326a29cdce154\",\"dweb:/ipfs/QmV2TScQgnSDZV5W2WCtQUD3Yk3tmZE7XcW37FAz9sXvUe\"]},\"@aave/protocol-v2/contracts/interfaces/IReserveInterestRateStrategy.sol\":{\"keccak256\":\"0x3a9950a7a40e4c7e25d4e99dd9da6fbe578b8d7c177f25046ce496f1d4cb96c4\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://695a267915f439626fbc6e0c21421611c3fc0a845a104ac63e95ecfde7545868\",\"dweb:/ipfs/QmNrWXZSMLmtkxeMEMpeTVNyP1hDXJN1vJHArKvNetghSf\"]},\"@aave/protocol-v2/contracts/interfaces/IScaledBalanceToken.sol\":{\"keccak256\":\"0x03f77c8f37be8f08723b82ccc7c000da0152839632a5c3952c292a2ea0b1b491\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://c8cbe31d5cd705ef15b40c0d9a48dace17797a314fa1d8d93edd412537e8ac98\",\"dweb:/ipfs/QmYuKD5D5NVakZ41XRxHvMUXUG4Hn83E9YyxJMrMCjPZxd\"]},\"@aave/protocol-v2/contracts/interfaces/IStableDebtToken.sol\":{\"keccak256\":\"0x687158da06cadc361ca7d1847cf11258fc98c0aea82a07174ef6a4cfe5a4bddf\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://e26e5dd0c77eedafbaec0d17384770c6182a4f75464650a3496e6cde5d1f000d\",\"dweb:/ipfs/QmW2PmbJdE2v1pPFg7MZzHHsPWVnexKGRRDH9ZsBBARu6U\"]},\"@aave/protocol-v2/contracts/interfaces/IVariableDebtToken.sol\":{\"keccak256\":\"0x1d19593a7d04c2a395c1f35f10baee4167624268d6e891cdc70c376e0a7e6062\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://e72f581ef2fe7bb5e69d2948663b1e49158d7aeaff7d84150cd5a7a93134aa4e\",\"dweb:/ipfs/QmaLhSGdBZotKRZQth8bMRZrJmCsFNus22zT4ka3yR7Zj2\"]},\"@aave/protocol-v2/contracts/protocol/lendingpool/LendingPool.sol\":{\"keccak256\":\"0x8a0f1cb1e1e189023c864b00b22f345bb9e7e1eaa5081d5d95205d38ba531c2c\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://e03edcc3ccddaa2ba581fa15b74ecb8382b9b4509591fec5948fad53034b2a15\",\"dweb:/ipfs/Qma99fpjNHiqKbuDwUdmuZwF6CWwhJczq8C1NKv2n87Jgu\"]},\"@aave/protocol-v2/contracts/protocol/lendingpool/LendingPoolStorage.sol\":{\"keccak256\":\"0xcb518dc21d976fa3a41e3a39343a51f33b6a3af2c9fab881fb695b1328e4aaab\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://87a895ea80a678ac05d6a178c52a3f76916ae30394e96c24865f1b19aad2e910\",\"dweb:/ipfs/QmPWWztzqBCJz9mVKjWBP1VYsGR6uig3KfcabF9grGSdg9\"]},\"@aave/protocol-v2/contracts/protocol/libraries/aave-upgradeability/VersionedInitializable.sol\":{\"keccak256\":\"0xb976d46db157e56a6d637aac9dcfb5067e429ab0792b5ad52705d2b5f89906be\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://1d239a46b779cff5c7e2c17e96efa8e02368891ca2691bb5bf4cfd9f86e296bb\",\"dweb:/ipfs/Qma1JsaJ9smAxtRXsPG9Z641Hd2f3vMYQUCq5KMwCaQCpJ\"]},\"@aave/protocol-v2/contracts/protocol/libraries/configuration/ReserveConfiguration.sol\":{\"keccak256\":\"0x725d4a2b4869743e9c0a5d80fb54d617b97985feb764876f6ee3462e148ce618\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://94424c667fa59e755ae2390476faf0afb0f7951f0cdd7226744dea68395403d5\",\"dweb:/ipfs/Qma57eNs4V8aw53fTW5ciFwCMqPW73ppZZ6suo7CJnWjiU\"]},\"@aave/protocol-v2/contracts/protocol/libraries/configuration/UserConfiguration.sol\":{\"keccak256\":\"0x121dba60b495c448524ec23d8bea9310e811dcc9cae01f95825160b7663edfc7\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://6a0ff6edb35813b54a8d0e9614062083cf4d3ece5b35f8258137e0d62a2a4828\",\"dweb:/ipfs/QmXjw8e2KRdseAZgSu75WWBaz5tjExDthcW2ZnJ83aozk2\"]},\"@aave/protocol-v2/contracts/protocol/libraries/helpers/Errors.sol\":{\"keccak256\":\"0xfb70949637d81dc9a3883601bb15226981f4c4847f65035e64bf5d120994efeb\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://43fb108a5038fbeb33294d3f4a9e7e4e021bef16f0e7a8a2f3ad9142808c7a8f\",\"dweb:/ipfs/QmUvAnwcuwmprQu4g3r1k3gE2EztuVPGRKJBMVX3KRC8W6\"]},\"@aave/protocol-v2/contracts/protocol/libraries/helpers/Helpers.sol\":{\"keccak256\":\"0xd513d293086becdf6b507d50a334c6ecffdbffcc5a132f498e73357d89f08a93\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://eb8d7a37fdb4a8b585e6fb6a4bf7f1f73dfeb100a42e2afd2d143c898d6f30dd\",\"dweb:/ipfs/Qmc4iuJGKRDLy4Yik3deNyBmCkRnsBAo9t3UBheCXUSDmd\"]},\"@aave/protocol-v2/contracts/protocol/libraries/logic/GenericLogic.sol\":{\"keccak256\":\"0x5b75d1683f77f406ada8d854bf9af0810a433baa7e4f5b9ab9c702be0c7af5df\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://65433d3ce412dddf98e7b9bd1d7b25b691ea64ba9cd19ac6e55348f292ed7a12\",\"dweb:/ipfs/QmNwXh94vabMqTUQpnhR23PLHYHruH2oV6hbxeM3W4SJmn\"]},\"@aave/protocol-v2/contracts/protocol/libraries/logic/ReserveLogic.sol\":{\"keccak256\":\"0xed0089befe19375a961a36260e0cc7c686df28f1d30aeee0b05775f96a98e0ae\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://94b777403df9ca19edd6368efec219f2ff8342ba41f6291feef2c9182e6dcc8d\",\"dweb:/ipfs/Qmb3raGwg6vgAu18e7twzWbNkwToQ2hjx9HQgUjADoHY1z\"]},\"@aave/protocol-v2/contracts/protocol/libraries/logic/ValidationLogic.sol\":{\"keccak256\":\"0x6569d41018650ffa7d2c1a9fb5591ff4714497b4c439e8384df82091862d6017\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://31f874085bc89643faa041167f5f4cdc686144b71587425ea0def8208004e409\",\"dweb:/ipfs/QmcH6Rttar7d3Cijgk7ScL8rSXxv519q2S4nw1xyTKL7e5\"]},\"@aave/protocol-v2/contracts/protocol/libraries/math/MathUtils.sol\":{\"keccak256\":\"0x631117c7e70631fc5b25b25f49bdcff11b53209c5c664567223cf59ea4a6c019\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://3761796e1a827d1ca020aa26a8ffcd7b6adf372d6f8313994321893bf70c5ea4\",\"dweb:/ipfs/QmZdjWvbESv62bShCnm7CRoajAUU9MbphHVb3qYEVxVBKp\"]},\"@aave/protocol-v2/contracts/protocol/libraries/math/PercentageMath.sol\":{\"keccak256\":\"0x3cc3b08aeee5b82a5f7b3958bae578e69f1b03a32fb9760ec21bdd1a9b109337\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://90b676cb885d38e6d47f11846c0c56166d28a95b4f90566b6230d2038f9f7c20\",\"dweb:/ipfs/QmPayXnuBpmkx5Y1ToShC9f8gjpFwgf2GWv9ngnvPPaBU7\"]},\"@aave/protocol-v2/contracts/protocol/libraries/math/WadRayMath.sol\":{\"keccak256\":\"0xf66b7e208da18d12ca2b6a5c9d58f8091819da1524c028f30a36304993039c72\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://75519c3d78ad40da70a1d24cf10557068d6726c894bbc6674531c73302ecc610\",\"dweb:/ipfs/Qmea7Q6ysFm9WH69EZLak7wCeT7Fcw4H9qMZGAUA52QoRf\"]},\"@aave/protocol-v2/contracts/protocol/libraries/types/DataTypes.sol\":{\"keccak256\":\"0xb1d3ae94d3e4b3bf23b3394d820a3a2b5ba56fd5389f561f3fdd73ed1c60c391\",\"license\":\"agpl-3.0\",\"urls\":[\"bzz-raw://47c11d578cc1e0df27e4e85cfe5831a48b78d6e939d34e17db4bc65a54c899fe\",\"dweb:/ipfs/QmYdYLkYFJe3psmQUH1S1uNhGE9xyxeDunuEW9gBPg9vDB\"]}},\"version\":1}",
  "bytecode": "0x6080604052600080546001600160a01b031990811673e0fba4fc209b4948668006b2be61711b7f465bae17918290556001805482166001600160a01b0393909316929092179091556002805490911673ff795577d9ac8bd7d90ee22b6c1703490b6512fd17905534801561007257600080fd5b50610141806100826000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806316f0115b1461003b5780633b76594d1461005f575b600080fd5b61004361007e565b604080516001600160a01b039092168252519081900360200190f35b61007c6004803603602081101561007557600080fd5b503561008d565b005b6000546001600160a01b031681565b6001546002546040805163e8eda9df60e01b81526001600160a01b039283166004820152602481018590523060448201526000606482018190529151929093169263e8eda9df926084808301939282900301818387803b1580156100f057600080fd5b505af1158015610104573d6000803e3d6000fd5b505050505056fea264697066735822122044da70b03d48a8c41b35418dcacc3cd746605acc0083b6d2009735a62382a56e64736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c806316f0115b1461003b5780633b76594d1461005f575b600080fd5b61004361007e565b604080516001600160a01b039092168252519081900360200190f35b61007c6004803603602081101561007557600080fd5b503561008d565b005b6000546001600160a01b031681565b6001546002546040805163e8eda9df60e01b81526001600160a01b039283166004820152602481018590523060448201526000606482018190529151929093169263e8eda9df926084808301939282900301818387803b1580156100f057600080fd5b505af1158015610104573d6000803e3d6000fd5b505050505056fea264697066735822122044da70b03d48a8c41b35418dcacc3cd746605acc0083b6d2009735a62382a56e64736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "107:785:0:-:0;;;139:64;;;-1:-1:-1;;;;;;139:64:0;;;161:42;139:64;;;;;;275:54;;;;-1:-1:-1;;;;;324:4:0;;;;275:54;;;;;;;357:66;;;;;;381:42;357:66;;;107:785;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "107:785:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;139:64;;;:::i;:::-;;;;-1:-1:-1;;;;;139:64:0;;;;;;;;;;;;;;762:127;;;;;;;;;;;;;;;;-1:-1:-1;762:127:0;;:::i;:::-;;139:64;;;-1:-1:-1;;;;;139:64:0;;:::o;762:127::-;818:14;;841:13;;818:63;;;-1:-1:-1;;;818:63:0;;-1:-1:-1;;;;;841:13:0;;;818:63;;;;;;;;;;872:4;818:63;;;;:14;:63;;;;;;;;:14;;;;;:22;;:63;;;;;:14;:63;;;;;:14;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;762:127;:::o",
  "source": "pragma solidity 0.6.12;\r\n\r\nimport \"@aave/protocol-v2/contracts/protocol/lendingpool/LendingPool.sol\";\r\n\r\n\r\ncontract LendingPoolTest {\r\n    address public pool = 0xE0fBa4Fc209b4948668006B2bE61711b7f465bAe; //The Aave Smart Contract Pool (currently set to DAI on Kovan)\r\n\r\n    LendingPool private stablecoinPool = LendingPool(pool); //the lending pool\r\n\r\n    address erc20Contract = 0xFf795577d9AC8bD7D90Ee22b6C1703490b6512FD; //the contract for the token/stablecoin\r\n\r\n\r\n    /**\r\n     * @dev - When funds are deposited through this function in the smart contract, \r\n        they will be sent to Aave and turn into yield-bearing\r\n        Note: Function will fail if approval (stablecoin.approve(pool, 79228162514260000000000000000)) not given first.\r\n     */\r\n    function depositFunds(uint256 amount) public {\r\n        stablecoinPool.deposit(erc20Contract, amount, address(this), 0);\r\n    }\r\n}",
  "sourcePath": "C:/Users/murrl/GithubRepos/PrescryptivePOC/AaveTest/contracts/LendingPoolTest.sol",
  "ast": {
    "absolutePath": "/C/Users/murrl/GithubRepos/PrescryptivePOC/AaveTest/contracts/LendingPoolTest.sol",
    "exportedSymbols": {
      "LendingPoolTest": [
        33
      ]
    },
    "id": 34,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "@aave/protocol-v2/contracts/protocol/lendingpool/LendingPool.sol",
        "file": "@aave/protocol-v2/contracts/protocol/lendingpool/LendingPool.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 34,
        "sourceUnit": 3385,
        "src": "27:74:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 33,
        "linearizedBaseContracts": [
          33
        ],
        "name": "LendingPoolTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "16f0115b",
            "id": 5,
            "mutability": "mutable",
            "name": "pool",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 33,
            "src": "139:64:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "139:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307845306642613446633230396234393438363638303036423262453631373131623766343635624165",
              "id": 4,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "161:42:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0xE0fBa4Fc209b4948668006B2bE61711b7f465bAe"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 10,
            "mutability": "mutable",
            "name": "stablecoinPool",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 33,
            "src": "275:54:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LendingPool_$3384",
              "typeString": "contract LendingPool"
            },
            "typeName": {
              "contractScope": null,
              "id": 6,
              "name": "LendingPool",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3384,
              "src": "275:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LendingPool_$3384",
                "typeString": "contract LendingPool"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "id": 8,
                  "name": "pool",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5,
                  "src": "324:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 7,
                "name": "LendingPool",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 3384,
                "src": "312:11:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_LendingPool_$3384_$",
                  "typeString": "type(contract LendingPool)"
                }
              },
              "id": 9,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "312:17:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LendingPool_$3384",
                "typeString": "contract LendingPool"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 13,
            "mutability": "mutable",
            "name": "erc20Contract",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 33,
            "src": "357:66:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 11,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "357:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "307846663739353537376439414338624437443930456532326236433137303334393062363531324644",
              "id": 12,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "381:42:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              },
              "value": "0xFf795577d9AC8bD7D90Ee22b6C1703490b6512FD"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 31,
              "nodeType": "Block",
              "src": "807:82:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 22,
                        "name": "erc20Contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13,
                        "src": "841:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 23,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "856:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 26,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "872:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LendingPoolTest_$33",
                              "typeString": "contract LendingPoolTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LendingPoolTest_$33",
                              "typeString": "contract LendingPoolTest"
                            }
                          ],
                          "id": 25,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "864:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "864:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 27,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "864:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 28,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "879:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 19,
                        "name": "stablecoinPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "818:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LendingPool_$3384",
                          "typeString": "contract LendingPool"
                        }
                      },
                      "id": 21,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deposit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1666,
                      "src": "818:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint16_$returns$__$",
                        "typeString": "function (address,uint256,address,uint16) external"
                      }
                    },
                    "id": 29,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "818:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30,
                  "nodeType": "ExpressionStatement",
                  "src": "818:63:0"
                }
              ]
            },
            "documentation": {
              "id": 14,
              "nodeType": "StructuredDocumentation",
              "src": "474:282:0",
              "text": " @dev - When funds are deposited through this function in the smart contract, \nthey will be sent to Aave and turn into yield-bearing\nNote: Function will fail if approval (stablecoin.approve(pool, 79228162514260000000000000000)) not given first."
            },
            "functionSelector": "3b76594d",
            "id": 32,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositFunds",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 32,
                  "src": "784:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "784:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "783:16:0"
            },
            "returnParameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "807:0:0"
            },
            "scope": 33,
            "src": "762:127:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 34,
        "src": "107:785:0"
      }
    ],
    "src": "0:892:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/C/Users/murrl/GithubRepos/PrescryptivePOC/AaveTest/contracts/LendingPoolTest.sol",
      "exportedSymbols": {
        "LendingPoolTest": [
          33
        ]
      },
      "license": null
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.6",
            ".12"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "attributes": {
          "SourceUnit": 3385,
          "absolutePath": "@aave/protocol-v2/contracts/protocol/lendingpool/LendingPool.sol",
          "file": "@aave/protocol-v2/contracts/protocol/lendingpool/LendingPool.sol",
          "scope": 34,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2,
        "name": "ImportDirective",
        "src": "27:74:0"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            33
          ],
          "name": "LendingPoolTest",
          "scope": 34
        },
        "children": [
          {
            "attributes": {
              "constant": false,
              "functionSelector": "16f0115b",
              "mutability": "mutable",
              "name": "pool",
              "overrides": null,
              "scope": 33,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 3,
                "name": "ElementaryTypeName",
                "src": "139:7:0"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "307845306642613446633230396234393438363638303036423262453631373131623766343635624165",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "number",
                  "type": "address payable",
                  "value": "0xE0fBa4Fc209b4948668006B2bE61711b7f465bAe"
                },
                "id": 4,
                "name": "Literal",
                "src": "161:42:0"
              }
            ],
            "id": 5,
            "name": "VariableDeclaration",
            "src": "139:64:0"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "stablecoinPool",
              "overrides": null,
              "scope": 33,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract LendingPool",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "LendingPool",
                  "referencedDeclaration": 3384,
                  "type": "contract LendingPool"
                },
                "id": 6,
                "name": "UserDefinedTypeName",
                "src": "275:11:0"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "isStructConstructorCall": false,
                  "lValueRequested": false,
                  "names": [
                    null
                  ],
                  "tryCall": false,
                  "type": "contract LendingPool",
                  "type_conversion": true
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 3384,
                      "type": "type(contract LendingPool)",
                      "value": "LendingPool"
                    },
                    "id": 7,
                    "name": "Identifier",
                    "src": "312:11:0"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 5,
                      "type": "address",
                      "value": "pool"
                    },
                    "id": 8,
                    "name": "Identifier",
                    "src": "324:4:0"
                  }
                ],
                "id": 9,
                "name": "FunctionCall",
                "src": "312:17:0"
              }
            ],
            "id": 10,
            "name": "VariableDeclaration",
            "src": "275:54:0"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "erc20Contract",
              "overrides": null,
              "scope": 33,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 11,
                "name": "ElementaryTypeName",
                "src": "357:7:0"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "307846663739353537376439414338624437443930456532326236433137303334393062363531324644",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "number",
                  "type": "address payable",
                  "value": "0xFf795577d9AC8bD7D90Ee22b6C1703490b6512FD"
                },
                "id": 12,
                "name": "Literal",
                "src": "381:42:0"
              }
            ],
            "id": 13,
            "name": "VariableDeclaration",
            "src": "357:66:0"
          },
          {
            "attributes": {
              "functionSelector": "3b76594d",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "depositFunds",
              "overrides": null,
              "scope": 33,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev - When funds are deposited through this function in the smart contract, \nthey will be sent to Aave and turn into yield-bearing\nNote: Function will fail if approval (stablecoin.approve(pool, 79228162514260000000000000000)) not given first."
                },
                "id": 14,
                "name": "StructuredDocumentation",
                "src": "474:282:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "overrides": null,
                      "scope": 32,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 15,
                        "name": "ElementaryTypeName",
                        "src": "784:7:0"
                      }
                    ],
                    "id": 16,
                    "name": "VariableDeclaration",
                    "src": "784:14:0"
                  }
                ],
                "id": 17,
                "name": "ParameterList",
                "src": "783:16:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 18,
                "name": "ParameterList",
                "src": "807:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "deposit",
                              "referencedDeclaration": 1666,
                              "type": "function (address,uint256,address,uint16) external"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10,
                                  "type": "contract LendingPool",
                                  "value": "stablecoinPool"
                                },
                                "id": 19,
                                "name": "Identifier",
                                "src": "818:14:0"
                              }
                            ],
                            "id": 21,
                            "name": "MemberAccess",
                            "src": "818:22:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 13,
                              "type": "address",
                              "value": "erc20Contract"
                            },
                            "id": 22,
                            "name": "Identifier",
                            "src": "841:13:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 16,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 23,
                            "name": "Identifier",
                            "src": "856:6:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_LendingPoolTest_$33",
                                      "typeString": "contract LendingPoolTest"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address",
                                      "type": null
                                    },
                                    "id": 24,
                                    "name": "ElementaryTypeName",
                                    "src": "864:7:0"
                                  }
                                ],
                                "id": 25,
                                "name": "ElementaryTypeNameExpression",
                                "src": "864:7:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -28,
                                  "type": "contract LendingPoolTest",
                                  "value": "this"
                                },
                                "id": 26,
                                "name": "Identifier",
                                "src": "872:4:0"
                              }
                            ],
                            "id": 27,
                            "name": "FunctionCall",
                            "src": "864:13:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 28,
                            "name": "Literal",
                            "src": "879:1:0"
                          }
                        ],
                        "id": 29,
                        "name": "FunctionCall",
                        "src": "818:63:0"
                      }
                    ],
                    "id": 30,
                    "name": "ExpressionStatement",
                    "src": "818:63:0"
                  }
                ],
                "id": 31,
                "name": "Block",
                "src": "807:82:0"
              }
            ],
            "id": 32,
            "name": "FunctionDefinition",
            "src": "762:127:0"
          }
        ],
        "id": 33,
        "name": "ContractDefinition",
        "src": "107:785:0"
      }
    ],
    "id": 34,
    "name": "SourceUnit",
    "src": "0:892:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {
    "42": {
      "events": {},
      "links": {},
      "address": "0x0144e3093B3E161a9F7D08b61FBBBF4DB77fFa7C",
      "transactionHash": "0x9ef0b27ad9a03b7a28d03c4de38d394c01f260221062332d2f2267fb7ce4e960"
    }
  },
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-08-12T17:52:42.010Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "depositFunds(uint256)": {
        "details": "- When funds are deposited through this function in the smart contract,  they will be sent to Aave and turn into yield-bearing Note: Function will fail if approval (stablecoin.approve(pool, 79228162514260000000000000000)) not given first."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}